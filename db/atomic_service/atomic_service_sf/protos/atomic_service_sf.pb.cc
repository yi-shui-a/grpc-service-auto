// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: atomic_service_sf.proto
// Protobuf C++ Version: 5.29.0

#include "atomic_service_sf.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace atomic_service_sf_Package {

inline constexpr atomic_service_sf_task_D_Request_st::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : int_array_{},
        _int_array_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR atomic_service_sf_task_D_Request_st::atomic_service_sf_task_D_Request_st(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct atomic_service_sf_task_D_Request_stDefaultTypeInternal {
  PROTOBUF_CONSTEXPR atomic_service_sf_task_D_Request_stDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~atomic_service_sf_task_D_Request_stDefaultTypeInternal() {}
  union {
    atomic_service_sf_task_D_Request_st _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 atomic_service_sf_task_D_Request_stDefaultTypeInternal _atomic_service_sf_task_D_Request_st_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUseDefaultTypeInternal() {}
  union {
    atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUseDefaultTypeInternal _atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse_default_instance_;

inline constexpr atomic_service_sf_task_C_Request_st::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR atomic_service_sf_task_C_Request_st::atomic_service_sf_task_C_Request_st(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct atomic_service_sf_task_C_Request_stDefaultTypeInternal {
  PROTOBUF_CONSTEXPR atomic_service_sf_task_C_Request_stDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~atomic_service_sf_task_C_Request_stDefaultTypeInternal() {}
  union {
    atomic_service_sf_task_C_Request_st _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 atomic_service_sf_task_C_Request_stDefaultTypeInternal _atomic_service_sf_task_C_Request_st_default_instance_;

inline constexpr atomic_service_sf_task_C_Reply_st::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        return_type_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR atomic_service_sf_task_C_Reply_st::atomic_service_sf_task_C_Reply_st(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct atomic_service_sf_task_C_Reply_stDefaultTypeInternal {
  PROTOBUF_CONSTEXPR atomic_service_sf_task_C_Reply_stDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~atomic_service_sf_task_C_Reply_stDefaultTypeInternal() {}
  union {
    atomic_service_sf_task_C_Reply_st _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 atomic_service_sf_task_C_Reply_stDefaultTypeInternal _atomic_service_sf_task_C_Reply_st_default_instance_;

inline constexpr atomic_service_sf_task_D_Reply_st::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : string_int_map_reply_{},
        return_type_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR atomic_service_sf_task_D_Reply_st::atomic_service_sf_task_D_Reply_st(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct atomic_service_sf_task_D_Reply_stDefaultTypeInternal {
  PROTOBUF_CONSTEXPR atomic_service_sf_task_D_Reply_stDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~atomic_service_sf_task_D_Reply_stDefaultTypeInternal() {}
  union {
    atomic_service_sf_task_D_Reply_st _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 atomic_service_sf_task_D_Reply_stDefaultTypeInternal _atomic_service_sf_task_D_Reply_st_default_instance_;
}  // namespace atomic_service_sf_Package
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_atomic_5fservice_5fsf_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_atomic_5fservice_5fsf_2eproto = nullptr;
const ::uint32_t
    TableStruct_atomic_5fservice_5fsf_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_C_Request_st, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_C_Request_st, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_C_Request_st, _impl_.title_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_C_Reply_st, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_C_Reply_st, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_C_Reply_st, _impl_.return_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_D_Request_st, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_D_Request_st, _impl_.int_array_),
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st, _impl_.string_int_map_reply_),
        PROTOBUF_FIELD_OFFSET(::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st, _impl_.return_type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::atomic_service_sf_Package::atomic_service_sf_task_C_Request_st)},
        {10, -1, -1, sizeof(::atomic_service_sf_Package::atomic_service_sf_task_C_Reply_st)},
        {20, -1, -1, sizeof(::atomic_service_sf_Package::atomic_service_sf_task_D_Request_st)},
        {29, 39, -1, sizeof(::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse)},
        {41, -1, -1, sizeof(::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::atomic_service_sf_Package::_atomic_service_sf_task_C_Request_st_default_instance_._instance,
    &::atomic_service_sf_Package::_atomic_service_sf_task_C_Reply_st_default_instance_._instance,
    &::atomic_service_sf_Package::_atomic_service_sf_task_D_Request_st_default_instance_._instance,
    &::atomic_service_sf_Package::_atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse_default_instance_._instance,
    &::atomic_service_sf_Package::_atomic_service_sf_task_D_Reply_st_default_instance_._instance,
};
const char descriptor_table_protodef_atomic_5fservice_5fsf_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027atomic_service_sf.proto\022\031atomic_servic"
    "e_sf_Package\"B\n#atomic_service_sf_task_C"
    "_Request_st\022\014\n\004name\030\001 \001(\t\022\r\n\005title\030\002 \001(\t"
    "\"H\n!atomic_service_sf_task_C_Reply_st\022\016\n"
    "\006result\030\001 \001(\t\022\023\n\013return_type\030\002 \001(\005\"8\n#at"
    "omic_service_sf_task_D_Request_st\022\021\n\tint"
    "_array\030\001 \003(\005\"\345\001\n!atomic_service_sf_task_"
    "D_Reply_st\022q\n\024string_int_map_reply\030\001 \003(\013"
    "2S.atomic_service_sf_Package.atomic_serv"
    "ice_sf_task_D_Reply_st.StringIntMapReply"
    "Entry\022\023\n\013return_type\030\002 \001(\005\0328\n\026StringIntM"
    "apReplyEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005"
    ":\0028\0012\327\002\n\031atomic_service_sf_Service\022\233\001\n\031a"
    "tomic_service_fun_task_C\022>.atomic_servic"
    "e_sf_Package.atomic_service_sf_task_C_Re"
    "quest_st\032<.atomic_service_sf_Package.ato"
    "mic_service_sf_task_C_Reply_st\"\000\022\233\001\n\031ato"
    "mic_service_fun_task_D\022>.atomic_service_"
    "sf_Package.atomic_service_sf_task_D_Requ"
    "est_st\032<.atomic_service_sf_Package.atomi"
    "c_service_sf_task_D_Reply_st\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_atomic_5fservice_5fsf_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_atomic_5fservice_5fsf_2eproto = {
    false,
    false,
    838,
    descriptor_table_protodef_atomic_5fservice_5fsf_2eproto,
    "atomic_service_sf.proto",
    &descriptor_table_atomic_5fservice_5fsf_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_atomic_5fservice_5fsf_2eproto::offsets,
    file_level_enum_descriptors_atomic_5fservice_5fsf_2eproto,
    file_level_service_descriptors_atomic_5fservice_5fsf_2eproto,
};
namespace atomic_service_sf_Package {
// ===================================================================

class atomic_service_sf_task_C_Request_st::_Internal {
 public:
};

atomic_service_sf_task_C_Request_st::atomic_service_sf_task_C_Request_st(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:atomic_service_sf_Package.atomic_service_sf_task_C_Request_st)
}
inline PROTOBUF_NDEBUG_INLINE atomic_service_sf_task_C_Request_st::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::atomic_service_sf_Package::atomic_service_sf_task_C_Request_st& from_msg)
      : name_(arena, from.name_),
        title_(arena, from.title_),
        _cached_size_{0} {}

atomic_service_sf_task_C_Request_st::atomic_service_sf_task_C_Request_st(
    ::google::protobuf::Arena* arena,
    const atomic_service_sf_task_C_Request_st& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  atomic_service_sf_task_C_Request_st* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:atomic_service_sf_Package.atomic_service_sf_task_C_Request_st)
}
inline PROTOBUF_NDEBUG_INLINE atomic_service_sf_task_C_Request_st::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        title_(arena),
        _cached_size_{0} {}

inline void atomic_service_sf_task_C_Request_st::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
atomic_service_sf_task_C_Request_st::~atomic_service_sf_task_C_Request_st() {
  // @@protoc_insertion_point(destructor:atomic_service_sf_Package.atomic_service_sf_task_C_Request_st)
  SharedDtor(*this);
}
inline void atomic_service_sf_task_C_Request_st::SharedDtor(MessageLite& self) {
  atomic_service_sf_task_C_Request_st& this_ = static_cast<atomic_service_sf_task_C_Request_st&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.title_.Destroy();
  this_._impl_.~Impl_();
}

inline void* atomic_service_sf_task_C_Request_st::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) atomic_service_sf_task_C_Request_st(arena);
}
constexpr auto atomic_service_sf_task_C_Request_st::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(atomic_service_sf_task_C_Request_st),
                                            alignof(atomic_service_sf_task_C_Request_st));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull atomic_service_sf_task_C_Request_st::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_atomic_service_sf_task_C_Request_st_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &atomic_service_sf_task_C_Request_st::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<atomic_service_sf_task_C_Request_st>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &atomic_service_sf_task_C_Request_st::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<atomic_service_sf_task_C_Request_st>(), &atomic_service_sf_task_C_Request_st::ByteSizeLong,
            &atomic_service_sf_task_C_Request_st::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_C_Request_st, _impl_._cached_size_),
        false,
    },
    &atomic_service_sf_task_C_Request_st::kDescriptorMethods,
    &descriptor_table_atomic_5fservice_5fsf_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* atomic_service_sf_task_C_Request_st::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> atomic_service_sf_task_C_Request_st::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::atomic_service_sf_Package::atomic_service_sf_task_C_Request_st>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_C_Request_st, _impl_.title_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_C_Request_st, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_C_Request_st, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string title = 2;
    {PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_C_Request_st, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\75\4\5\0\0\0\0\0"
    "atomic_service_sf_Package.atomic_service_sf_task_C_Request_st"
    "name"
    "title"
  }},
};

PROTOBUF_NOINLINE void atomic_service_sf_task_C_Request_st::Clear() {
// @@protoc_insertion_point(message_clear_start:atomic_service_sf_Package.atomic_service_sf_task_C_Request_st)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* atomic_service_sf_task_C_Request_st::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const atomic_service_sf_task_C_Request_st& this_ = static_cast<const atomic_service_sf_task_C_Request_st&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* atomic_service_sf_task_C_Request_st::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const atomic_service_sf_task_C_Request_st& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:atomic_service_sf_Package.atomic_service_sf_task_C_Request_st)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "atomic_service_sf_Package.atomic_service_sf_task_C_Request_st.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string title = 2;
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "atomic_service_sf_Package.atomic_service_sf_task_C_Request_st.title");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:atomic_service_sf_Package.atomic_service_sf_task_C_Request_st)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t atomic_service_sf_task_C_Request_st::ByteSizeLong(const MessageLite& base) {
          const atomic_service_sf_task_C_Request_st& this_ = static_cast<const atomic_service_sf_task_C_Request_st&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t atomic_service_sf_task_C_Request_st::ByteSizeLong() const {
          const atomic_service_sf_task_C_Request_st& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:atomic_service_sf_Package.atomic_service_sf_task_C_Request_st)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string title = 2;
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void atomic_service_sf_task_C_Request_st::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<atomic_service_sf_task_C_Request_st*>(&to_msg);
  auto& from = static_cast<const atomic_service_sf_task_C_Request_st&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:atomic_service_sf_Package.atomic_service_sf_task_C_Request_st)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void atomic_service_sf_task_C_Request_st::CopyFrom(const atomic_service_sf_task_C_Request_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atomic_service_sf_Package.atomic_service_sf_task_C_Request_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void atomic_service_sf_task_C_Request_st::InternalSwap(atomic_service_sf_task_C_Request_st* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
}

::google::protobuf::Metadata atomic_service_sf_task_C_Request_st::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class atomic_service_sf_task_C_Reply_st::_Internal {
 public:
};

atomic_service_sf_task_C_Reply_st::atomic_service_sf_task_C_Reply_st(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st)
}
inline PROTOBUF_NDEBUG_INLINE atomic_service_sf_task_C_Reply_st::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::atomic_service_sf_Package::atomic_service_sf_task_C_Reply_st& from_msg)
      : result_(arena, from.result_),
        _cached_size_{0} {}

atomic_service_sf_task_C_Reply_st::atomic_service_sf_task_C_Reply_st(
    ::google::protobuf::Arena* arena,
    const atomic_service_sf_task_C_Reply_st& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  atomic_service_sf_task_C_Reply_st* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.return_type_ = from._impl_.return_type_;

  // @@protoc_insertion_point(copy_constructor:atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st)
}
inline PROTOBUF_NDEBUG_INLINE atomic_service_sf_task_C_Reply_st::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_(arena),
        _cached_size_{0} {}

inline void atomic_service_sf_task_C_Reply_st::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.return_type_ = {};
}
atomic_service_sf_task_C_Reply_st::~atomic_service_sf_task_C_Reply_st() {
  // @@protoc_insertion_point(destructor:atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st)
  SharedDtor(*this);
}
inline void atomic_service_sf_task_C_Reply_st::SharedDtor(MessageLite& self) {
  atomic_service_sf_task_C_Reply_st& this_ = static_cast<atomic_service_sf_task_C_Reply_st&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.result_.Destroy();
  this_._impl_.~Impl_();
}

inline void* atomic_service_sf_task_C_Reply_st::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) atomic_service_sf_task_C_Reply_st(arena);
}
constexpr auto atomic_service_sf_task_C_Reply_st::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(atomic_service_sf_task_C_Reply_st),
                                            alignof(atomic_service_sf_task_C_Reply_st));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull atomic_service_sf_task_C_Reply_st::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_atomic_service_sf_task_C_Reply_st_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &atomic_service_sf_task_C_Reply_st::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<atomic_service_sf_task_C_Reply_st>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &atomic_service_sf_task_C_Reply_st::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<atomic_service_sf_task_C_Reply_st>(), &atomic_service_sf_task_C_Reply_st::ByteSizeLong,
            &atomic_service_sf_task_C_Reply_st::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_C_Reply_st, _impl_._cached_size_),
        false,
    },
    &atomic_service_sf_task_C_Reply_st::kDescriptorMethods,
    &descriptor_table_atomic_5fservice_5fsf_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* atomic_service_sf_task_C_Reply_st::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 74, 2> atomic_service_sf_task_C_Reply_st::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::atomic_service_sf_Package::atomic_service_sf_task_C_Reply_st>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 return_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(atomic_service_sf_task_C_Reply_st, _impl_.return_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_C_Reply_st, _impl_.return_type_)}},
    // string result = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_C_Reply_st, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string result = 1;
    {PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_C_Reply_st, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 return_type = 2;
    {PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_C_Reply_st, _impl_.return_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\73\6\0\0\0\0\0\0"
    "atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st"
    "result"
  }},
};

PROTOBUF_NOINLINE void atomic_service_sf_task_C_Reply_st::Clear() {
// @@protoc_insertion_point(message_clear_start:atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _impl_.return_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* atomic_service_sf_task_C_Reply_st::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const atomic_service_sf_task_C_Reply_st& this_ = static_cast<const atomic_service_sf_task_C_Reply_st&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* atomic_service_sf_task_C_Reply_st::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const atomic_service_sf_task_C_Reply_st& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string result = 1;
          if (!this_._internal_result().empty()) {
            const std::string& _s = this_._internal_result();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st.result");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 return_type = 2;
          if (this_._internal_return_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_return_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t atomic_service_sf_task_C_Reply_st::ByteSizeLong(const MessageLite& base) {
          const atomic_service_sf_task_C_Reply_st& this_ = static_cast<const atomic_service_sf_task_C_Reply_st&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t atomic_service_sf_task_C_Reply_st::ByteSizeLong() const {
          const atomic_service_sf_task_C_Reply_st& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string result = 1;
            if (!this_._internal_result().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_result());
            }
            // int32 return_type = 2;
            if (this_._internal_return_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_return_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void atomic_service_sf_task_C_Reply_st::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<atomic_service_sf_task_C_Reply_st*>(&to_msg);
  auto& from = static_cast<const atomic_service_sf_task_C_Reply_st&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  if (from._internal_return_type() != 0) {
    _this->_impl_.return_type_ = from._impl_.return_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void atomic_service_sf_task_C_Reply_st::CopyFrom(const atomic_service_sf_task_C_Reply_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atomic_service_sf_Package.atomic_service_sf_task_C_Reply_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void atomic_service_sf_task_C_Reply_st::InternalSwap(atomic_service_sf_task_C_Reply_st* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_, &other->_impl_.result_, arena);
        swap(_impl_.return_type_, other->_impl_.return_type_);
}

::google::protobuf::Metadata atomic_service_sf_task_C_Reply_st::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class atomic_service_sf_task_D_Request_st::_Internal {
 public:
};

atomic_service_sf_task_D_Request_st::atomic_service_sf_task_D_Request_st(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:atomic_service_sf_Package.atomic_service_sf_task_D_Request_st)
}
inline PROTOBUF_NDEBUG_INLINE atomic_service_sf_task_D_Request_st::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::atomic_service_sf_Package::atomic_service_sf_task_D_Request_st& from_msg)
      : int_array_{visibility, arena, from.int_array_},
        _int_array_cached_byte_size_{0},
        _cached_size_{0} {}

atomic_service_sf_task_D_Request_st::atomic_service_sf_task_D_Request_st(
    ::google::protobuf::Arena* arena,
    const atomic_service_sf_task_D_Request_st& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  atomic_service_sf_task_D_Request_st* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:atomic_service_sf_Package.atomic_service_sf_task_D_Request_st)
}
inline PROTOBUF_NDEBUG_INLINE atomic_service_sf_task_D_Request_st::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : int_array_{visibility, arena},
        _int_array_cached_byte_size_{0},
        _cached_size_{0} {}

inline void atomic_service_sf_task_D_Request_st::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
atomic_service_sf_task_D_Request_st::~atomic_service_sf_task_D_Request_st() {
  // @@protoc_insertion_point(destructor:atomic_service_sf_Package.atomic_service_sf_task_D_Request_st)
  SharedDtor(*this);
}
inline void atomic_service_sf_task_D_Request_st::SharedDtor(MessageLite& self) {
  atomic_service_sf_task_D_Request_st& this_ = static_cast<atomic_service_sf_task_D_Request_st&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* atomic_service_sf_task_D_Request_st::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) atomic_service_sf_task_D_Request_st(arena);
}
constexpr auto atomic_service_sf_task_D_Request_st::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Request_st, _impl_.int_array_) +
          decltype(atomic_service_sf_task_D_Request_st::_impl_.int_array_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(atomic_service_sf_task_D_Request_st), alignof(atomic_service_sf_task_D_Request_st), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&atomic_service_sf_task_D_Request_st::PlacementNew_,
                                 sizeof(atomic_service_sf_task_D_Request_st),
                                 alignof(atomic_service_sf_task_D_Request_st));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull atomic_service_sf_task_D_Request_st::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_atomic_service_sf_task_D_Request_st_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &atomic_service_sf_task_D_Request_st::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<atomic_service_sf_task_D_Request_st>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &atomic_service_sf_task_D_Request_st::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<atomic_service_sf_task_D_Request_st>(), &atomic_service_sf_task_D_Request_st::ByteSizeLong,
            &atomic_service_sf_task_D_Request_st::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Request_st, _impl_._cached_size_),
        false,
    },
    &atomic_service_sf_task_D_Request_st::kDescriptorMethods,
    &descriptor_table_atomic_5fservice_5fsf_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* atomic_service_sf_task_D_Request_st::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> atomic_service_sf_task_D_Request_st::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::atomic_service_sf_Package::atomic_service_sf_task_D_Request_st>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 int_array = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Request_st, _impl_.int_array_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 int_array = 1;
    {PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Request_st, _impl_.int_array_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void atomic_service_sf_task_D_Request_st::Clear() {
// @@protoc_insertion_point(message_clear_start:atomic_service_sf_Package.atomic_service_sf_task_D_Request_st)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.int_array_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* atomic_service_sf_task_D_Request_st::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const atomic_service_sf_task_D_Request_st& this_ = static_cast<const atomic_service_sf_task_D_Request_st&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* atomic_service_sf_task_D_Request_st::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const atomic_service_sf_task_D_Request_st& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:atomic_service_sf_Package.atomic_service_sf_task_D_Request_st)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int32 int_array = 1;
          {
            int byte_size = this_._impl_._int_array_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  1, this_._internal_int_array(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:atomic_service_sf_Package.atomic_service_sf_task_D_Request_st)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t atomic_service_sf_task_D_Request_st::ByteSizeLong(const MessageLite& base) {
          const atomic_service_sf_task_D_Request_st& this_ = static_cast<const atomic_service_sf_task_D_Request_st&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t atomic_service_sf_task_D_Request_st::ByteSizeLong() const {
          const atomic_service_sf_task_D_Request_st& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:atomic_service_sf_Package.atomic_service_sf_task_D_Request_st)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 int_array = 1;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_int_array(), 1,
                      this_._impl_._int_array_cached_byte_size_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void atomic_service_sf_task_D_Request_st::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<atomic_service_sf_task_D_Request_st*>(&to_msg);
  auto& from = static_cast<const atomic_service_sf_task_D_Request_st&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:atomic_service_sf_Package.atomic_service_sf_task_D_Request_st)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_int_array()->MergeFrom(from._internal_int_array());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void atomic_service_sf_task_D_Request_st::CopyFrom(const atomic_service_sf_task_D_Request_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atomic_service_sf_Package.atomic_service_sf_task_D_Request_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void atomic_service_sf_task_D_Request_st::InternalSwap(atomic_service_sf_task_D_Request_st* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.int_array_.InternalSwap(&other->_impl_.int_array_);
}

::google::protobuf::Metadata atomic_service_sf_task_D_Request_st::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse() : SuperType() {}
              atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse(arena);
              }
              constexpr auto atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse),
                                                          alignof(atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_atomic_5fservice_5fsf_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 94, 2> atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st_StringIntMapReplyEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\122\3\0\0\0\0\0\0"
    "atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st.StringIntMapReplyEntry"
    "key"
  }},
};

// ===================================================================

class atomic_service_sf_task_D_Reply_st::_Internal {
 public:
};

atomic_service_sf_task_D_Reply_st::atomic_service_sf_task_D_Reply_st(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st)
}
inline PROTOBUF_NDEBUG_INLINE atomic_service_sf_task_D_Reply_st::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st& from_msg)
      : string_int_map_reply_{visibility, arena, from.string_int_map_reply_},
        _cached_size_{0} {}

atomic_service_sf_task_D_Reply_st::atomic_service_sf_task_D_Reply_st(
    ::google::protobuf::Arena* arena,
    const atomic_service_sf_task_D_Reply_st& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  atomic_service_sf_task_D_Reply_st* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.return_type_ = from._impl_.return_type_;

  // @@protoc_insertion_point(copy_constructor:atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st)
}
inline PROTOBUF_NDEBUG_INLINE atomic_service_sf_task_D_Reply_st::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : string_int_map_reply_{visibility, arena},
        _cached_size_{0} {}

inline void atomic_service_sf_task_D_Reply_st::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.return_type_ = {};
}
atomic_service_sf_task_D_Reply_st::~atomic_service_sf_task_D_Reply_st() {
  // @@protoc_insertion_point(destructor:atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st)
  SharedDtor(*this);
}
inline void atomic_service_sf_task_D_Reply_st::SharedDtor(MessageLite& self) {
  atomic_service_sf_task_D_Reply_st& this_ = static_cast<atomic_service_sf_task_D_Reply_st&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* atomic_service_sf_task_D_Reply_st::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) atomic_service_sf_task_D_Reply_st(arena);
}
constexpr auto atomic_service_sf_task_D_Reply_st::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st, _impl_.string_int_map_reply_) +
          decltype(atomic_service_sf_task_D_Reply_st::_impl_.string_int_map_reply_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st, _impl_.string_int_map_reply_) +
          decltype(atomic_service_sf_task_D_Reply_st::_impl_.string_int_map_reply_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(atomic_service_sf_task_D_Reply_st), alignof(atomic_service_sf_task_D_Reply_st), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&atomic_service_sf_task_D_Reply_st::PlacementNew_,
                                 sizeof(atomic_service_sf_task_D_Reply_st),
                                 alignof(atomic_service_sf_task_D_Reply_st));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull atomic_service_sf_task_D_Reply_st::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_atomic_service_sf_task_D_Reply_st_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &atomic_service_sf_task_D_Reply_st::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<atomic_service_sf_task_D_Reply_st>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &atomic_service_sf_task_D_Reply_st::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<atomic_service_sf_task_D_Reply_st>(), &atomic_service_sf_task_D_Reply_st::ByteSizeLong,
            &atomic_service_sf_task_D_Reply_st::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st, _impl_._cached_size_),
        false,
    },
    &atomic_service_sf_task_D_Reply_st::kDescriptorMethods,
    &descriptor_table_atomic_5fservice_5fsf_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* atomic_service_sf_task_D_Reply_st::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 88, 2> atomic_service_sf_task_D_Reply_st::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::atomic_service_sf_Package::atomic_service_sf_task_D_Reply_st>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 return_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(atomic_service_sf_task_D_Reply_st, _impl_.return_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st, _impl_.return_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, int32> string_int_map_reply = 1;
    {PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st, _impl_.string_int_map_reply_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int32 return_type = 2;
    {PROTOBUF_FIELD_OFFSET(atomic_service_sf_task_D_Reply_st, _impl_.return_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(atomic_service_sf_task_D_Reply_st()._impl_.string_int_map_reply_)>(
        1, 0, 0, 9,
        5)},
  }}, {{
    "\73\24\0\0\0\0\0\0"
    "atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st"
    "string_int_map_reply"
  }},
};

PROTOBUF_NOINLINE void atomic_service_sf_task_D_Reply_st::Clear() {
// @@protoc_insertion_point(message_clear_start:atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.string_int_map_reply_.Clear();
  _impl_.return_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* atomic_service_sf_task_D_Reply_st::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const atomic_service_sf_task_D_Reply_st& this_ = static_cast<const atomic_service_sf_task_D_Reply_st&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* atomic_service_sf_task_D_Reply_st::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const atomic_service_sf_task_D_Reply_st& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // map<string, int32> string_int_map_reply = 1;
          if (!this_._internal_string_int_map_reply().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int32_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int32_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT32>;
            const auto& field = this_._internal_string_int_map_reply();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st.string_int_map_reply");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st.string_int_map_reply");
              }
            }
          }

          // int32 return_type = 2;
          if (this_._internal_return_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_return_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t atomic_service_sf_task_D_Reply_st::ByteSizeLong(const MessageLite& base) {
          const atomic_service_sf_task_D_Reply_st& this_ = static_cast<const atomic_service_sf_task_D_Reply_st&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t atomic_service_sf_task_D_Reply_st::ByteSizeLong() const {
          const atomic_service_sf_task_D_Reply_st& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, int32> string_int_map_reply = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_string_int_map_reply_size());
              for (const auto& entry : this_._internal_string_int_map_reply()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int32_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // int32 return_type = 2;
            if (this_._internal_return_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_return_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void atomic_service_sf_task_D_Reply_st::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<atomic_service_sf_task_D_Reply_st*>(&to_msg);
  auto& from = static_cast<const atomic_service_sf_task_D_Reply_st&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.string_int_map_reply_.MergeFrom(from._impl_.string_int_map_reply_);
  if (from._internal_return_type() != 0) {
    _this->_impl_.return_type_ = from._impl_.return_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void atomic_service_sf_task_D_Reply_st::CopyFrom(const atomic_service_sf_task_D_Reply_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atomic_service_sf_Package.atomic_service_sf_task_D_Reply_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void atomic_service_sf_task_D_Reply_st::InternalSwap(atomic_service_sf_task_D_Reply_st* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.string_int_map_reply_.InternalSwap(&other->_impl_.string_int_map_reply_);
        swap(_impl_.return_type_, other->_impl_.return_type_);
}

::google::protobuf::Metadata atomic_service_sf_task_D_Reply_st::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace atomic_service_sf_Package
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_atomic_5fservice_5fsf_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
