// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: atomic_service_mbsb.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_atomic_5fservice_5fmbsb_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_atomic_5fservice_5fmbsb_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_atomic_5fservice_5fmbsb_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_atomic_5fservice_5fmbsb_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_atomic_5fservice_5fmbsb_2eproto;
namespace atomic_service_mbsb_Package {
class atomic_service_mbsb_task_A_Reply_st;
struct atomic_service_mbsb_task_A_Reply_stDefaultTypeInternal;
extern atomic_service_mbsb_task_A_Reply_stDefaultTypeInternal _atomic_service_mbsb_task_A_Reply_st_default_instance_;
class atomic_service_mbsb_task_A_Request_st;
struct atomic_service_mbsb_task_A_Request_stDefaultTypeInternal;
extern atomic_service_mbsb_task_A_Request_stDefaultTypeInternal _atomic_service_mbsb_task_A_Request_st_default_instance_;
class atomic_service_mbsb_task_B_Reply_st;
struct atomic_service_mbsb_task_B_Reply_stDefaultTypeInternal;
extern atomic_service_mbsb_task_B_Reply_stDefaultTypeInternal _atomic_service_mbsb_task_B_Reply_st_default_instance_;
class atomic_service_mbsb_task_B_Request_st;
struct atomic_service_mbsb_task_B_Request_stDefaultTypeInternal;
extern atomic_service_mbsb_task_B_Request_stDefaultTypeInternal _atomic_service_mbsb_task_B_Request_st_default_instance_;
}  // namespace atomic_service_mbsb_Package
PROTOBUF_NAMESPACE_OPEN
template<> ::atomic_service_mbsb_Package::atomic_service_mbsb_task_A_Reply_st* Arena::CreateMaybeMessage<::atomic_service_mbsb_Package::atomic_service_mbsb_task_A_Reply_st>(Arena*);
template<> ::atomic_service_mbsb_Package::atomic_service_mbsb_task_A_Request_st* Arena::CreateMaybeMessage<::atomic_service_mbsb_Package::atomic_service_mbsb_task_A_Request_st>(Arena*);
template<> ::atomic_service_mbsb_Package::atomic_service_mbsb_task_B_Reply_st* Arena::CreateMaybeMessage<::atomic_service_mbsb_Package::atomic_service_mbsb_task_B_Reply_st>(Arena*);
template<> ::atomic_service_mbsb_Package::atomic_service_mbsb_task_B_Request_st* Arena::CreateMaybeMessage<::atomic_service_mbsb_Package::atomic_service_mbsb_task_B_Request_st>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace atomic_service_mbsb_Package {

// ===================================================================

class atomic_service_mbsb_task_A_Request_st final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Request_st) */ {
 public:
  inline atomic_service_mbsb_task_A_Request_st() : atomic_service_mbsb_task_A_Request_st(nullptr) {}
  ~atomic_service_mbsb_task_A_Request_st() override;
  explicit PROTOBUF_CONSTEXPR atomic_service_mbsb_task_A_Request_st(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  atomic_service_mbsb_task_A_Request_st(const atomic_service_mbsb_task_A_Request_st& from);
  atomic_service_mbsb_task_A_Request_st(atomic_service_mbsb_task_A_Request_st&& from) noexcept
    : atomic_service_mbsb_task_A_Request_st() {
    *this = ::std::move(from);
  }

  inline atomic_service_mbsb_task_A_Request_st& operator=(const atomic_service_mbsb_task_A_Request_st& from) {
    CopyFrom(from);
    return *this;
  }
  inline atomic_service_mbsb_task_A_Request_st& operator=(atomic_service_mbsb_task_A_Request_st&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const atomic_service_mbsb_task_A_Request_st& default_instance() {
    return *internal_default_instance();
  }
  static inline const atomic_service_mbsb_task_A_Request_st* internal_default_instance() {
    return reinterpret_cast<const atomic_service_mbsb_task_A_Request_st*>(
               &_atomic_service_mbsb_task_A_Request_st_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(atomic_service_mbsb_task_A_Request_st& a, atomic_service_mbsb_task_A_Request_st& b) {
    a.Swap(&b);
  }
  inline void Swap(atomic_service_mbsb_task_A_Request_st* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(atomic_service_mbsb_task_A_Request_st* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  atomic_service_mbsb_task_A_Request_st* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<atomic_service_mbsb_task_A_Request_st>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const atomic_service_mbsb_task_A_Request_st& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const atomic_service_mbsb_task_A_Request_st& from) {
    atomic_service_mbsb_task_A_Request_st::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(atomic_service_mbsb_task_A_Request_st* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Request_st";
  }
  protected:
  explicit atomic_service_mbsb_task_A_Request_st(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumber1FieldNumber = 1,
    kNumber2FieldNumber = 2,
  };
  // int32 number1 = 1;
  void clear_number1();
  int32_t number1() const;
  void set_number1(int32_t value);
  private:
  int32_t _internal_number1() const;
  void _internal_set_number1(int32_t value);
  public:

  // int32 number2 = 2;
  void clear_number2();
  int32_t number2() const;
  void set_number2(int32_t value);
  private:
  int32_t _internal_number2() const;
  void _internal_set_number2(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Request_st)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t number1_;
    int32_t number2_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_atomic_5fservice_5fmbsb_2eproto;
};
// -------------------------------------------------------------------

class atomic_service_mbsb_task_A_Reply_st final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Reply_st) */ {
 public:
  inline atomic_service_mbsb_task_A_Reply_st() : atomic_service_mbsb_task_A_Reply_st(nullptr) {}
  ~atomic_service_mbsb_task_A_Reply_st() override;
  explicit PROTOBUF_CONSTEXPR atomic_service_mbsb_task_A_Reply_st(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  atomic_service_mbsb_task_A_Reply_st(const atomic_service_mbsb_task_A_Reply_st& from);
  atomic_service_mbsb_task_A_Reply_st(atomic_service_mbsb_task_A_Reply_st&& from) noexcept
    : atomic_service_mbsb_task_A_Reply_st() {
    *this = ::std::move(from);
  }

  inline atomic_service_mbsb_task_A_Reply_st& operator=(const atomic_service_mbsb_task_A_Reply_st& from) {
    CopyFrom(from);
    return *this;
  }
  inline atomic_service_mbsb_task_A_Reply_st& operator=(atomic_service_mbsb_task_A_Reply_st&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const atomic_service_mbsb_task_A_Reply_st& default_instance() {
    return *internal_default_instance();
  }
  static inline const atomic_service_mbsb_task_A_Reply_st* internal_default_instance() {
    return reinterpret_cast<const atomic_service_mbsb_task_A_Reply_st*>(
               &_atomic_service_mbsb_task_A_Reply_st_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(atomic_service_mbsb_task_A_Reply_st& a, atomic_service_mbsb_task_A_Reply_st& b) {
    a.Swap(&b);
  }
  inline void Swap(atomic_service_mbsb_task_A_Reply_st* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(atomic_service_mbsb_task_A_Reply_st* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  atomic_service_mbsb_task_A_Reply_st* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<atomic_service_mbsb_task_A_Reply_st>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const atomic_service_mbsb_task_A_Reply_st& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const atomic_service_mbsb_task_A_Reply_st& from) {
    atomic_service_mbsb_task_A_Reply_st::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(atomic_service_mbsb_task_A_Reply_st* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Reply_st";
  }
  protected:
  explicit atomic_service_mbsb_task_A_Reply_st(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSumResultFieldNumber = 1,
    kReturnTypeFieldNumber = 2,
  };
  // int32 sum_result = 1;
  void clear_sum_result();
  int32_t sum_result() const;
  void set_sum_result(int32_t value);
  private:
  int32_t _internal_sum_result() const;
  void _internal_set_sum_result(int32_t value);
  public:

  // int32 return_type = 2;
  void clear_return_type();
  int32_t return_type() const;
  void set_return_type(int32_t value);
  private:
  int32_t _internal_return_type() const;
  void _internal_set_return_type(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Reply_st)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t sum_result_;
    int32_t return_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_atomic_5fservice_5fmbsb_2eproto;
};
// -------------------------------------------------------------------

class atomic_service_mbsb_task_B_Request_st final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Request_st) */ {
 public:
  inline atomic_service_mbsb_task_B_Request_st() : atomic_service_mbsb_task_B_Request_st(nullptr) {}
  ~atomic_service_mbsb_task_B_Request_st() override;
  explicit PROTOBUF_CONSTEXPR atomic_service_mbsb_task_B_Request_st(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  atomic_service_mbsb_task_B_Request_st(const atomic_service_mbsb_task_B_Request_st& from);
  atomic_service_mbsb_task_B_Request_st(atomic_service_mbsb_task_B_Request_st&& from) noexcept
    : atomic_service_mbsb_task_B_Request_st() {
    *this = ::std::move(from);
  }

  inline atomic_service_mbsb_task_B_Request_st& operator=(const atomic_service_mbsb_task_B_Request_st& from) {
    CopyFrom(from);
    return *this;
  }
  inline atomic_service_mbsb_task_B_Request_st& operator=(atomic_service_mbsb_task_B_Request_st&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const atomic_service_mbsb_task_B_Request_st& default_instance() {
    return *internal_default_instance();
  }
  static inline const atomic_service_mbsb_task_B_Request_st* internal_default_instance() {
    return reinterpret_cast<const atomic_service_mbsb_task_B_Request_st*>(
               &_atomic_service_mbsb_task_B_Request_st_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(atomic_service_mbsb_task_B_Request_st& a, atomic_service_mbsb_task_B_Request_st& b) {
    a.Swap(&b);
  }
  inline void Swap(atomic_service_mbsb_task_B_Request_st* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(atomic_service_mbsb_task_B_Request_st* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  atomic_service_mbsb_task_B_Request_st* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<atomic_service_mbsb_task_B_Request_st>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const atomic_service_mbsb_task_B_Request_st& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const atomic_service_mbsb_task_B_Request_st& from) {
    atomic_service_mbsb_task_B_Request_st::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(atomic_service_mbsb_task_B_Request_st* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Request_st";
  }
  protected:
  explicit atomic_service_mbsb_task_B_Request_st(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumber1FieldNumber = 1,
    kNumber2FieldNumber = 2,
  };
  // int32 number1 = 1;
  void clear_number1();
  int32_t number1() const;
  void set_number1(int32_t value);
  private:
  int32_t _internal_number1() const;
  void _internal_set_number1(int32_t value);
  public:

  // int32 number2 = 2;
  void clear_number2();
  int32_t number2() const;
  void set_number2(int32_t value);
  private:
  int32_t _internal_number2() const;
  void _internal_set_number2(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Request_st)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t number1_;
    int32_t number2_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_atomic_5fservice_5fmbsb_2eproto;
};
// -------------------------------------------------------------------

class atomic_service_mbsb_task_B_Reply_st final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Reply_st) */ {
 public:
  inline atomic_service_mbsb_task_B_Reply_st() : atomic_service_mbsb_task_B_Reply_st(nullptr) {}
  ~atomic_service_mbsb_task_B_Reply_st() override;
  explicit PROTOBUF_CONSTEXPR atomic_service_mbsb_task_B_Reply_st(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  atomic_service_mbsb_task_B_Reply_st(const atomic_service_mbsb_task_B_Reply_st& from);
  atomic_service_mbsb_task_B_Reply_st(atomic_service_mbsb_task_B_Reply_st&& from) noexcept
    : atomic_service_mbsb_task_B_Reply_st() {
    *this = ::std::move(from);
  }

  inline atomic_service_mbsb_task_B_Reply_st& operator=(const atomic_service_mbsb_task_B_Reply_st& from) {
    CopyFrom(from);
    return *this;
  }
  inline atomic_service_mbsb_task_B_Reply_st& operator=(atomic_service_mbsb_task_B_Reply_st&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const atomic_service_mbsb_task_B_Reply_st& default_instance() {
    return *internal_default_instance();
  }
  static inline const atomic_service_mbsb_task_B_Reply_st* internal_default_instance() {
    return reinterpret_cast<const atomic_service_mbsb_task_B_Reply_st*>(
               &_atomic_service_mbsb_task_B_Reply_st_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(atomic_service_mbsb_task_B_Reply_st& a, atomic_service_mbsb_task_B_Reply_st& b) {
    a.Swap(&b);
  }
  inline void Swap(atomic_service_mbsb_task_B_Reply_st* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(atomic_service_mbsb_task_B_Reply_st* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  atomic_service_mbsb_task_B_Reply_st* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<atomic_service_mbsb_task_B_Reply_st>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const atomic_service_mbsb_task_B_Reply_st& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const atomic_service_mbsb_task_B_Reply_st& from) {
    atomic_service_mbsb_task_B_Reply_st::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(atomic_service_mbsb_task_B_Reply_st* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Reply_st";
  }
  protected:
  explicit atomic_service_mbsb_task_B_Reply_st(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubResultFieldNumber = 1,
    kReturnTypeFieldNumber = 2,
  };
  // int32 sub_result = 1;
  void clear_sub_result();
  int32_t sub_result() const;
  void set_sub_result(int32_t value);
  private:
  int32_t _internal_sub_result() const;
  void _internal_set_sub_result(int32_t value);
  public:

  // int32 return_type = 2;
  void clear_return_type();
  int32_t return_type() const;
  void set_return_type(int32_t value);
  private:
  int32_t _internal_return_type() const;
  void _internal_set_return_type(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Reply_st)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t sub_result_;
    int32_t return_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_atomic_5fservice_5fmbsb_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// atomic_service_mbsb_task_A_Request_st

// int32 number1 = 1;
inline void atomic_service_mbsb_task_A_Request_st::clear_number1() {
  _impl_.number1_ = 0;
}
inline int32_t atomic_service_mbsb_task_A_Request_st::_internal_number1() const {
  return _impl_.number1_;
}
inline int32_t atomic_service_mbsb_task_A_Request_st::number1() const {
  // @@protoc_insertion_point(field_get:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Request_st.number1)
  return _internal_number1();
}
inline void atomic_service_mbsb_task_A_Request_st::_internal_set_number1(int32_t value) {
  
  _impl_.number1_ = value;
}
inline void atomic_service_mbsb_task_A_Request_st::set_number1(int32_t value) {
  _internal_set_number1(value);
  // @@protoc_insertion_point(field_set:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Request_st.number1)
}

// int32 number2 = 2;
inline void atomic_service_mbsb_task_A_Request_st::clear_number2() {
  _impl_.number2_ = 0;
}
inline int32_t atomic_service_mbsb_task_A_Request_st::_internal_number2() const {
  return _impl_.number2_;
}
inline int32_t atomic_service_mbsb_task_A_Request_st::number2() const {
  // @@protoc_insertion_point(field_get:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Request_st.number2)
  return _internal_number2();
}
inline void atomic_service_mbsb_task_A_Request_st::_internal_set_number2(int32_t value) {
  
  _impl_.number2_ = value;
}
inline void atomic_service_mbsb_task_A_Request_st::set_number2(int32_t value) {
  _internal_set_number2(value);
  // @@protoc_insertion_point(field_set:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Request_st.number2)
}

// -------------------------------------------------------------------

// atomic_service_mbsb_task_A_Reply_st

// int32 sum_result = 1;
inline void atomic_service_mbsb_task_A_Reply_st::clear_sum_result() {
  _impl_.sum_result_ = 0;
}
inline int32_t atomic_service_mbsb_task_A_Reply_st::_internal_sum_result() const {
  return _impl_.sum_result_;
}
inline int32_t atomic_service_mbsb_task_A_Reply_st::sum_result() const {
  // @@protoc_insertion_point(field_get:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Reply_st.sum_result)
  return _internal_sum_result();
}
inline void atomic_service_mbsb_task_A_Reply_st::_internal_set_sum_result(int32_t value) {
  
  _impl_.sum_result_ = value;
}
inline void atomic_service_mbsb_task_A_Reply_st::set_sum_result(int32_t value) {
  _internal_set_sum_result(value);
  // @@protoc_insertion_point(field_set:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Reply_st.sum_result)
}

// int32 return_type = 2;
inline void atomic_service_mbsb_task_A_Reply_st::clear_return_type() {
  _impl_.return_type_ = 0;
}
inline int32_t atomic_service_mbsb_task_A_Reply_st::_internal_return_type() const {
  return _impl_.return_type_;
}
inline int32_t atomic_service_mbsb_task_A_Reply_st::return_type() const {
  // @@protoc_insertion_point(field_get:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Reply_st.return_type)
  return _internal_return_type();
}
inline void atomic_service_mbsb_task_A_Reply_st::_internal_set_return_type(int32_t value) {
  
  _impl_.return_type_ = value;
}
inline void atomic_service_mbsb_task_A_Reply_st::set_return_type(int32_t value) {
  _internal_set_return_type(value);
  // @@protoc_insertion_point(field_set:atomic_service_mbsb_Package.atomic_service_mbsb_task_A_Reply_st.return_type)
}

// -------------------------------------------------------------------

// atomic_service_mbsb_task_B_Request_st

// int32 number1 = 1;
inline void atomic_service_mbsb_task_B_Request_st::clear_number1() {
  _impl_.number1_ = 0;
}
inline int32_t atomic_service_mbsb_task_B_Request_st::_internal_number1() const {
  return _impl_.number1_;
}
inline int32_t atomic_service_mbsb_task_B_Request_st::number1() const {
  // @@protoc_insertion_point(field_get:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Request_st.number1)
  return _internal_number1();
}
inline void atomic_service_mbsb_task_B_Request_st::_internal_set_number1(int32_t value) {
  
  _impl_.number1_ = value;
}
inline void atomic_service_mbsb_task_B_Request_st::set_number1(int32_t value) {
  _internal_set_number1(value);
  // @@protoc_insertion_point(field_set:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Request_st.number1)
}

// int32 number2 = 2;
inline void atomic_service_mbsb_task_B_Request_st::clear_number2() {
  _impl_.number2_ = 0;
}
inline int32_t atomic_service_mbsb_task_B_Request_st::_internal_number2() const {
  return _impl_.number2_;
}
inline int32_t atomic_service_mbsb_task_B_Request_st::number2() const {
  // @@protoc_insertion_point(field_get:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Request_st.number2)
  return _internal_number2();
}
inline void atomic_service_mbsb_task_B_Request_st::_internal_set_number2(int32_t value) {
  
  _impl_.number2_ = value;
}
inline void atomic_service_mbsb_task_B_Request_st::set_number2(int32_t value) {
  _internal_set_number2(value);
  // @@protoc_insertion_point(field_set:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Request_st.number2)
}

// -------------------------------------------------------------------

// atomic_service_mbsb_task_B_Reply_st

// int32 sub_result = 1;
inline void atomic_service_mbsb_task_B_Reply_st::clear_sub_result() {
  _impl_.sub_result_ = 0;
}
inline int32_t atomic_service_mbsb_task_B_Reply_st::_internal_sub_result() const {
  return _impl_.sub_result_;
}
inline int32_t atomic_service_mbsb_task_B_Reply_st::sub_result() const {
  // @@protoc_insertion_point(field_get:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Reply_st.sub_result)
  return _internal_sub_result();
}
inline void atomic_service_mbsb_task_B_Reply_st::_internal_set_sub_result(int32_t value) {
  
  _impl_.sub_result_ = value;
}
inline void atomic_service_mbsb_task_B_Reply_st::set_sub_result(int32_t value) {
  _internal_set_sub_result(value);
  // @@protoc_insertion_point(field_set:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Reply_st.sub_result)
}

// int32 return_type = 2;
inline void atomic_service_mbsb_task_B_Reply_st::clear_return_type() {
  _impl_.return_type_ = 0;
}
inline int32_t atomic_service_mbsb_task_B_Reply_st::_internal_return_type() const {
  return _impl_.return_type_;
}
inline int32_t atomic_service_mbsb_task_B_Reply_st::return_type() const {
  // @@protoc_insertion_point(field_get:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Reply_st.return_type)
  return _internal_return_type();
}
inline void atomic_service_mbsb_task_B_Reply_st::_internal_set_return_type(int32_t value) {
  
  _impl_.return_type_ = value;
}
inline void atomic_service_mbsb_task_B_Reply_st::set_return_type(int32_t value) {
  _internal_set_return_type(value);
  // @@protoc_insertion_point(field_set:atomic_service_mbsb_Package.atomic_service_mbsb_task_B_Reply_st.return_type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace atomic_service_mbsb_Package

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_atomic_5fservice_5fmbsb_2eproto
