// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: atomic_service_mbsb.proto

#include "atomic_service_mbsb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace atomic_service_mbsb_Package {
class atomic_service_mbsb_Request_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<atomic_service_mbsb_Request_st>
      _instance;
} _atomic_service_mbsb_Request_st_default_instance_;
class atomic_service_mbsb_Reply_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<atomic_service_mbsb_Reply_st>
      _instance;
} _atomic_service_mbsb_Reply_st_default_instance_;
}  // namespace atomic_service_mbsb_Package
namespace protobuf_atomic_5fservice_5fmbsb_2eproto {
static void InitDefaultsatomic_service_mbsb_Request_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::atomic_service_mbsb_Package::_atomic_service_mbsb_Request_st_default_instance_;
    new (ptr) ::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_atomic_service_mbsb_Request_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsatomic_service_mbsb_Request_st}, {}};

static void InitDefaultsatomic_service_mbsb_Reply_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::atomic_service_mbsb_Package::_atomic_service_mbsb_Reply_st_default_instance_;
    new (ptr) ::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_atomic_service_mbsb_Reply_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsatomic_service_mbsb_Reply_st}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_atomic_service_mbsb_Request_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_atomic_service_mbsb_Reply_st.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st, integer_field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st, double_field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st, float_field_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st, integer_reply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st, double_reply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st, float_reply_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st)},
  { 9, -1, sizeof(::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::atomic_service_mbsb_Package::_atomic_service_mbsb_Request_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::atomic_service_mbsb_Package::_atomic_service_mbsb_Reply_st_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "atomic_service_mbsb.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031atomic_service_mbsb.proto\022\033atomic_serv"
      "ice_mbsb_Package\"p\n\036atomic_service_mbsb_"
      "Request_st\022\014\n\004name\030\001 \001(\t\022\025\n\rinteger_fiel"
      "d\030\002 \001(\005\022\024\n\014double_field\030\003 \001(\001\022\023\n\013float_f"
      "ield\030\004 \001(\002\"q\n\034atomic_service_mbsb_Reply_"
      "st\022\017\n\007message\030\001 \001(\t\022\025\n\rinteger_reply\030\002 \001"
      "(\005\022\024\n\014double_reply\030\003 \001(\001\022\023\n\013float_reply\030"
      "\004 \001(\0022\271\001\n\033atomic_service_mbsb_Service\022\231\001"
      "\n\035atomic_service_mbsb_interface\022;.atomic"
      "_service_mbsb_Package.atomic_service_mbs"
      "b_Request_st\0329.atomic_service_mbsb_Packa"
      "ge.atomic_service_mbsb_Reply_st\"\000b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 481);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "atomic_service_mbsb.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_atomic_5fservice_5fmbsb_2eproto
namespace atomic_service_mbsb_Package {

// ===================================================================

void atomic_service_mbsb_Request_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int atomic_service_mbsb_Request_st::kNameFieldNumber;
const int atomic_service_mbsb_Request_st::kIntegerFieldFieldNumber;
const int atomic_service_mbsb_Request_st::kDoubleFieldFieldNumber;
const int atomic_service_mbsb_Request_st::kFloatFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

atomic_service_mbsb_Request_st::atomic_service_mbsb_Request_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_atomic_5fservice_5fmbsb_2eproto::scc_info_atomic_service_mbsb_Request_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
}
atomic_service_mbsb_Request_st::atomic_service_mbsb_Request_st(const atomic_service_mbsb_Request_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&double_field_, &from.double_field_,
    static_cast<size_t>(reinterpret_cast<char*>(&float_field_) -
    reinterpret_cast<char*>(&double_field_)) + sizeof(float_field_));
  // @@protoc_insertion_point(copy_constructor:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
}

void atomic_service_mbsb_Request_st::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&double_field_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&float_field_) -
      reinterpret_cast<char*>(&double_field_)) + sizeof(float_field_));
}

atomic_service_mbsb_Request_st::~atomic_service_mbsb_Request_st() {
  // @@protoc_insertion_point(destructor:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  SharedDtor();
}

void atomic_service_mbsb_Request_st::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void atomic_service_mbsb_Request_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* atomic_service_mbsb_Request_st::descriptor() {
  ::protobuf_atomic_5fservice_5fmbsb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_atomic_5fservice_5fmbsb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const atomic_service_mbsb_Request_st& atomic_service_mbsb_Request_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_atomic_5fservice_5fmbsb_2eproto::scc_info_atomic_service_mbsb_Request_st.base);
  return *internal_default_instance();
}


void atomic_service_mbsb_Request_st::Clear() {
// @@protoc_insertion_point(message_clear_start:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&double_field_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&float_field_) -
      reinterpret_cast<char*>(&double_field_)) + sizeof(float_field_));
  _internal_metadata_.Clear();
}

bool atomic_service_mbsb_Request_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "atomic_service_mbsb_Package.atomic_service_mbsb_Request_st.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 integer_field = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &integer_field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_field = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_field = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  return false;
#undef DO_
}

void atomic_service_mbsb_Request_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "atomic_service_mbsb_Package.atomic_service_mbsb_Request_st.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 integer_field = 2;
  if (this->integer_field() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->integer_field(), output);
  }

  // double double_field = 3;
  if (this->double_field() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_field(), output);
  }

  // float float_field = 4;
  if (this->float_field() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->float_field(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
}

::google::protobuf::uint8* atomic_service_mbsb_Request_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "atomic_service_mbsb_Package.atomic_service_mbsb_Request_st.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 integer_field = 2;
  if (this->integer_field() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->integer_field(), target);
  }

  // double double_field = 3;
  if (this->double_field() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_field(), target);
  }

  // float float_field = 4;
  if (this->float_field() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->float_field(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  return target;
}

size_t atomic_service_mbsb_Request_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // double double_field = 3;
  if (this->double_field() != 0) {
    total_size += 1 + 8;
  }

  // int32 integer_field = 2;
  if (this->integer_field() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->integer_field());
  }

  // float float_field = 4;
  if (this->float_field() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void atomic_service_mbsb_Request_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  GOOGLE_DCHECK_NE(&from, this);
  const atomic_service_mbsb_Request_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const atomic_service_mbsb_Request_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
    MergeFrom(*source);
  }
}

void atomic_service_mbsb_Request_st::MergeFrom(const atomic_service_mbsb_Request_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.double_field() != 0) {
    set_double_field(from.double_field());
  }
  if (from.integer_field() != 0) {
    set_integer_field(from.integer_field());
  }
  if (from.float_field() != 0) {
    set_float_field(from.float_field());
  }
}

void atomic_service_mbsb_Request_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void atomic_service_mbsb_Request_st::CopyFrom(const atomic_service_mbsb_Request_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atomic_service_mbsb_Package.atomic_service_mbsb_Request_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool atomic_service_mbsb_Request_st::IsInitialized() const {
  return true;
}

void atomic_service_mbsb_Request_st::Swap(atomic_service_mbsb_Request_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void atomic_service_mbsb_Request_st::InternalSwap(atomic_service_mbsb_Request_st* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(double_field_, other->double_field_);
  swap(integer_field_, other->integer_field_);
  swap(float_field_, other->float_field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata atomic_service_mbsb_Request_st::GetMetadata() const {
  protobuf_atomic_5fservice_5fmbsb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_atomic_5fservice_5fmbsb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void atomic_service_mbsb_Reply_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int atomic_service_mbsb_Reply_st::kMessageFieldNumber;
const int atomic_service_mbsb_Reply_st::kIntegerReplyFieldNumber;
const int atomic_service_mbsb_Reply_st::kDoubleReplyFieldNumber;
const int atomic_service_mbsb_Reply_st::kFloatReplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

atomic_service_mbsb_Reply_st::atomic_service_mbsb_Reply_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_atomic_5fservice_5fmbsb_2eproto::scc_info_atomic_service_mbsb_Reply_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
}
atomic_service_mbsb_Reply_st::atomic_service_mbsb_Reply_st(const atomic_service_mbsb_Reply_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&double_reply_, &from.double_reply_,
    static_cast<size_t>(reinterpret_cast<char*>(&float_reply_) -
    reinterpret_cast<char*>(&double_reply_)) + sizeof(float_reply_));
  // @@protoc_insertion_point(copy_constructor:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
}

void atomic_service_mbsb_Reply_st::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&double_reply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&float_reply_) -
      reinterpret_cast<char*>(&double_reply_)) + sizeof(float_reply_));
}

atomic_service_mbsb_Reply_st::~atomic_service_mbsb_Reply_st() {
  // @@protoc_insertion_point(destructor:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  SharedDtor();
}

void atomic_service_mbsb_Reply_st::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void atomic_service_mbsb_Reply_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* atomic_service_mbsb_Reply_st::descriptor() {
  ::protobuf_atomic_5fservice_5fmbsb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_atomic_5fservice_5fmbsb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const atomic_service_mbsb_Reply_st& atomic_service_mbsb_Reply_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_atomic_5fservice_5fmbsb_2eproto::scc_info_atomic_service_mbsb_Reply_st.base);
  return *internal_default_instance();
}


void atomic_service_mbsb_Reply_st::Clear() {
// @@protoc_insertion_point(message_clear_start:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&double_reply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&float_reply_) -
      reinterpret_cast<char*>(&double_reply_)) + sizeof(float_reply_));
  _internal_metadata_.Clear();
}

bool atomic_service_mbsb_Reply_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 integer_reply = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &integer_reply_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_reply = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_reply_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_reply = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_reply_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  return false;
#undef DO_
}

void atomic_service_mbsb_Reply_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // int32 integer_reply = 2;
  if (this->integer_reply() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->integer_reply(), output);
  }

  // double double_reply = 3;
  if (this->double_reply() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_reply(), output);
  }

  // float float_reply = 4;
  if (this->float_reply() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->float_reply(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
}

::google::protobuf::uint8* atomic_service_mbsb_Reply_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // int32 integer_reply = 2;
  if (this->integer_reply() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->integer_reply(), target);
  }

  // double double_reply = 3;
  if (this->double_reply() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_reply(), target);
  }

  // float float_reply = 4;
  if (this->float_reply() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->float_reply(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  return target;
}

size_t atomic_service_mbsb_Reply_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // double double_reply = 3;
  if (this->double_reply() != 0) {
    total_size += 1 + 8;
  }

  // int32 integer_reply = 2;
  if (this->integer_reply() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->integer_reply());
  }

  // float float_reply = 4;
  if (this->float_reply() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void atomic_service_mbsb_Reply_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  GOOGLE_DCHECK_NE(&from, this);
  const atomic_service_mbsb_Reply_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const atomic_service_mbsb_Reply_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
    MergeFrom(*source);
  }
}

void atomic_service_mbsb_Reply_st::MergeFrom(const atomic_service_mbsb_Reply_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.double_reply() != 0) {
    set_double_reply(from.double_reply());
  }
  if (from.integer_reply() != 0) {
    set_integer_reply(from.integer_reply());
  }
  if (from.float_reply() != 0) {
    set_float_reply(from.float_reply());
  }
}

void atomic_service_mbsb_Reply_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void atomic_service_mbsb_Reply_st::CopyFrom(const atomic_service_mbsb_Reply_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atomic_service_mbsb_Package.atomic_service_mbsb_Reply_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool atomic_service_mbsb_Reply_st::IsInitialized() const {
  return true;
}

void atomic_service_mbsb_Reply_st::Swap(atomic_service_mbsb_Reply_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void atomic_service_mbsb_Reply_st::InternalSwap(atomic_service_mbsb_Reply_st* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(double_reply_, other->double_reply_);
  swap(integer_reply_, other->integer_reply_);
  swap(float_reply_, other->float_reply_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata atomic_service_mbsb_Reply_st::GetMetadata() const {
  protobuf_atomic_5fservice_5fmbsb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_atomic_5fservice_5fmbsb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace atomic_service_mbsb_Package
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st* Arena::CreateMaybeMessage< ::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st >(Arena* arena) {
  return Arena::CreateInternal< ::atomic_service_mbsb_Package::atomic_service_mbsb_Request_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st* Arena::CreateMaybeMessage< ::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st >(Arena* arena) {
  return Arena::CreateInternal< ::atomic_service_mbsb_Package::atomic_service_mbsb_Reply_st >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
