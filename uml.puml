@startuml
'https://plantuml.com/class-diagram

'class AXService
'class Message
'class ServiceMethod
'class GrpcMethod
'class JsonRpcMethod
'class ReturnCode
'class AtomService
'class Implement
'class CombineService
'class AppService
'class DDS



AXService <|-- AtomService
AXService <|-- CombineService
AXService <|-- AppService

AXService "1"<--"1...n" ServiceMethod
AXService "1"<--"1...n" Message
AXService "1"<--"1" Owner
AXService "1"<--"1" ResourceRequirement
AXService "1"<--"1...n" OperatingSystem
AXService "1"<--"1" BaseInfo

CombineService "1"<--"1...n" AtomService

ServiceMethod <|-- GrpcMethod
ServiceMethod <|-- JsonRpcMethod
ServiceMethod "1"<--"1" ReturnCode

Owner "1"<--"1" Developer
Owner "1"<--"1" Maintainer

Message "1"<--"1...n" Field
GrpcMethod "1"<--"1" capabilities

class Owner {
	-developer: Developer
	-maintainer: Maintainer
}

class Developer {
		-name: String
		-email: String
}

class Maintainer {
		-name: String
		-email: String
}

class ResourceRequirement {
    -cpu_architecture: String
    -memory: int
    -hard_disk: int
}

class OperatingSystem {
    -name: String
    -version: String
}

class BaseInfo {
    -name: String
    -chinese_name: String
    -description: String
    -version: String
    -build_time: String
    -priority_level: int
    -license: String
    -servicePath: String
}

class AXService {
    -base_info: BaseInfo
    -owner:Owner
    -resource_requirements: ResourceRequirement
    -operating_systems: vector<OperatingSystem>
    -messages:vector<Message>
    -service_methods: vector<ServiceMethod>
'    -implement_instance: Implemented

'    +bool parseCpp(String fileName)
'    +bool parseHpp(String fileName)
'    +Json loadJson(String fileName)
'    +bool writeCpp(String filePath, String systemVersion)
'    +bool writeHpp(String filePath, String systemVersion)
'    +bool generateJson(String fileName)

'    +Json toJson()
    +String toString()
}

class AtomService{

}

class CombineService {
    -atom_service_list: vector<AtomService>
}


class ServiceUtil {
    -service: AXService
    -operating_system: OperatingSystem
    -program_language: String
'    -jsonFile: String
'    -protoFile: String
'    -grpcPbFile: String
'    -libFile: String
'    -JinjaTemplateFile: String

    +bool parseCpp(String fileName)
    +bool parseHpp(String fileName)
    +Json loadJson(String fileName)
    +bool writeCpp(String filePath)
    +bool writeHpp(String filePath)
    +bool generateJson(String fileName)

'    +bool generateProtoFile(String filePath)
'    +bool generateGrpcFile(String proto2pbFilePath)
'    +bool generateLib(String proto2pbFilePath)
'    +bool generateServiceImpl()
'    +bool generateStubImpl()
}

class capabilities {
    read: bool
    write: bool
    delete: bool
}



class ServiceMethod {
    -name: String
    -chinese_name: String
    -description: String
    -return_code: ReturnCode
}

class GrpcMethod {

    -requestMsg: Message
    -responseMsg: Message
    -capabilitiesVar: capabilities

'    +bool generateProtoFile(String filePath)
'    +bool generateGrpcFile(String proto2pbFilePath)
'    +bool generateLib(String proto2pbFilePath)
'    +bool generateServiceImpl()
'    +bool generateStubImpl()
'
'    +bool loadInfo(Json data)
'    +Json toJson()
    +String toString()
}

class ServiceMethodUtil{
    -method: ServiceMethod
    -operating_system: OperatingSystem
    -program_language: String

    +bool generateProtoFile(String filePath)
    +bool generateGrpcFile(String proto2pbFilePath)
    +bool generateLib(String proto2pbFilePath)
    +bool generateServiceImpl()
    +bool generateStubImpl()
}

class ReturnCode {
    -returnValue:map<String, int>

    +bool addReturnValue(String key, int value)
    +bool setReturnValue(String key, int value)
    +bool removeReturnValue(String key)
    +int getReturnValue(String key)
    +String getReturnKey(int value)
	+String toString()
}

class Field {
    -id: int
    -name: String
    -type: String
    -key: String
    -value: String
    -chinese_name: String
}

class Message {
    -label: String
    -name: String
    -fields: vector<Field>

'    +bool loadInfo(Json data)
'    +Json toJson()
    +String toString()
}


@enduml